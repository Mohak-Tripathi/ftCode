[
  ["debug", "o", {"title": "Debug Settings"}],
  ["debug.udp_log_addr", "s", {"title": "Send logs to this ip:port (UDP)"}],
  ["debug.udp_log_level", "i", {"title": "Log at most this level messages to UDP"}],
  ["debug.mbedtls_level", "i", {"title": "mbedTLS debug level"}],
  ["debug.level", "i", {"title": "Debug Level"}],
  ["debug.file_level", "s", {"title": "Log file level specification: file=level,file=level,...; see cs_log_set_file_level()"}],
  ["debug.event_level", "i", {"title": "Max level for which a MGOS_EVENT_LOG is raised"}],
  ["debug.stdout_uart", "i", {"title": "STDOUT UART (-1 to disable)"}],
  ["debug.stderr_uart", "i", {"title": "STDERR UART (-1 to disable)"}],
  ["debug.factory_reset_gpio", "i", {"title": "Factory reset GPIO (low on boot)"}],
  ["debug.mg_mgr_hexdump_file", "s", {"title": "File name to hexdump network traffic to. Use '-' for stdout, '--' for stderr."}],
  ["debug.stdout_topic", "s", {"title": "MQTT topic to publish STDOUT to"}],
  ["debug.stderr_topic", "s", {"title": "MQTT topic to publish STDERR to"}],
  ["device", "o", {"title": "Device settings"}],
  ["device.id", "s", {"title": "Device ID"}],
  ["device.license", "s", {"title": "License code"}],
  ["device.mac", "s", {"title": "user/custom defined mac address"}],
  ["device.public_key", "s", {"title": "Key for the restricted access"}],
  ["device.sn", "s", {"title": "Serial number"}],
  ["sys", "o", {"title": "System settings"}],
  ["sys.tz_spec", "s", {"title": "See formats for the TZ env var: \"man tzset\". Formats like \":/path/to/file\" are not supported"}],
  ["sys.wdt_timeout", "i", {"title": "Watchdog timeout (seconds)"}],
  ["sys.pref_ota_lib", "s", {"title": "Preferred ota lib, e.g. dash, ota-http-client"}],
  ["conf_acl", "s", {"title": "Conf ACL"}],
  ["eth", "o", {"title:\"Ethernet parameters\"": null}],
  ["eth.enable", "b", {"title": "Enable Ethernet interface "}],
  ["eth.phy_addr", "i", {"title": "(R)MII PHY address"}],
  ["eth.ip", "s", {"title": "Static IP Address"}],
  ["eth.netmask", "s", {"title": "Static Netmask"}],
  ["eth.gw", "s", {"title": "Static Default Gateway"}],
  ["eth.nameserver", "s", {"title": "Static DNS Server"}],
  ["eth.dhcp_hostname", "s", {"title": "Host name to include in DHCP requests"}],
  ["eth.clk_mode", "i", {"title": "50 MHz clock source: 0 in <- GPIO0, 1 out -> GPIO0, 2 out -> GPIO16, 3 out -> GPIO17 (inverted)"}],
  ["eth.mdc_gpio", "i", {"title": "GPIO to use for RMII MDC signal"}],
  ["eth.mdio_gpio", "i", {"title": "GPIO to use for RMII MDIO signal"}],
  ["eth.phy_pwr_gpio", "i", {"title": "GPIO to use for ETH PHY Reset"}],
  ["file_logger", "o", {"title": "File logger settings"}],
  ["file_logger.enable", "b", {"title": "Enable"}],
  ["file_logger.dir", "s", {"title": "Directory to store log files into"}],
  ["file_logger.prefix", "s", {"title": "Prefix for the log files"}],
  ["file_logger.max_file_size", "i", {"title": "Max size of each log file"}],
  ["file_logger.max_num_files", "i", {"title": "Max number of files. At most 100 files are supported."}],
  ["file_logger.timestamps", "b", {"title": "Add timestamps to entries (uptime)"}],
  ["file_logger.level", "i", {"title": "Maximum log level for messages to get logged"}],
  ["file_logger.include", "s", {"title": "A comma-separated list of substrings. If set, only messages containing one of these are logged."}],
  ["file_logger.syslog_enable", "b", {"title": "Capture system log messages"}],
  ["file_logger.rpc_service_enable", "b", {"title": "Export RPC service for management"}],
  ["file_logger.buf_size", "i", {"title": "Buffer size"}],
  ["file_logger.buf_line", "b", {"title": "Line-buffering (flush after each line)"}],
  ["http", "o", {"title": "HTTP Server"}],
  ["http.enable", "b", {"title": "Enable HTTP Server"}],
  ["http.listen_addr", "s", {"title": "Listening port / address"}],
  ["http.document_root", "s", {"title": "Root for serving files. Setting to empty disables file serving."}],
  ["http.index_files", "s", {"title": "Comma-separated list of index files"}],
  ["http.ssl_cert", "s", {"title": "Turn on SSL on the listener, use this cert"}],
  ["http.ssl_key", "s", {"title": "SSL key to use"}],
  ["http.ssl_ca_cert", "s", {"title": "Verify clients this CA bundle"}],
  ["http.upload_acl", "s", {"title": "Upload file ACL"}],
  ["http.hidden_files", "s", {"title": "Hidden file pattern"}],
  ["http.auth_domain", "s", {"title": "Enable authentication of all HTTP requests"}],
  ["http.auth_file", "s", {"title": "Password file to use for auth"}],
  ["http.auth_algo", "i", {"title": "Password file hashing algorithm: 0 - MD5, 1 - SHA256"}],
  ["http.extra_headers", "s", {"title": "Extra headers to send with every file served"}],
  ["i2c", "o", {"title": "I2C settings"}],
  ["i2c.unit_no", "i", {"title": "Which hardware unit to use, 0 or 1"}],
  ["i2c.enable", "b", {"title": "Enable I2C"}],
  ["i2c.freq", "i", {"title": "Clock frequency"}],
  ["i2c.debug", "b", {"title": "Debug I2C bus activity"}],
  ["i2c.sda_gpio", "i", {"title": "GPIO to use for SDA"}],
  ["i2c.scl_gpio", "i", {"title": "GPIO to use for SCL"}],
  ["i2c1", "o", {"title": "I2C settings"}],
  ["i2c1.unit_no", "i", {"title": "Which hardware unit to use, 0 or 1"}],
  ["i2c1.enable", "b", {"title": "Enable I2C"}],
  ["i2c1.freq", "i", {"title": "Clock frequency"}],
  ["i2c1.debug", "b", {"title": "Debug I2C bus activity"}],
  ["i2c1.sda_gpio", "i", {"title": "GPIO to use for SDA"}],
  ["i2c1.scl_gpio", "i", {"title": "GPIO to use for SCL"}],
  ["mqtt", "o", {"title": "MQTT settings"}],
  ["mqtt.enable", "b", {"title": "Enable MQTT"}],
  ["mqtt.server", "s", {"title": "MQTT server"}],
  ["mqtt.client_id", "s", {"title": "ClientID send to the broker. Defaults to device.id."}],
  ["mqtt.user", "s", {"title": "User name"}],
  ["mqtt.pass", "s", {"title": "Password"}],
  ["mqtt.reconnect_timeout_min", "d", {"title": "Starting reconnect timeout in sec"}],
  ["mqtt.reconnect_timeout_max", "d", {"title": "Maximum reconnect timeout in sec"}],
  ["mqtt.ssl_cert", "s", {"title": "Client certificate to present to the server"}],
  ["mqtt.ssl_key", "s", {"title": "Private key corresponding to the certificate"}],
  ["mqtt.ssl_ca_cert", "s", {"title": "Verify server certificate using this CA bundle"}],
  ["mqtt.ssl_cipher_suites", "s", {"title": "Cipher suites to offer to the server"}],
  ["mqtt.ssl_psk_identity", "s", {"title": "PSK identity (must specify PSK cipher suites)"}],
  ["mqtt.ssl_psk_key", "s", {"title": "PSK key"}],
  ["mqtt.clean_session", "b", {"title": "Clean Session"}],
  ["mqtt.keep_alive", "i", {"title": "Keep alive interval"}],
  ["mqtt.will_topic", "s", {"title": "will topic"}],
  ["mqtt.will_message", "s", {"title": "Will message"}],
  ["mqtt.will_retain", "b", {"title": "Will retain flag"}],
  ["mqtt.max_qos", "i", {"title": "Limit QoS of outgoing messages to at most this"}],
  ["mqtt.recv_mbuf_limit", "i", {"title": "Limit recv buffer size"}],
  ["mqtt.require_time", "b", {"title": "Only connect if (when) wall time is set"}],
  ["mqtt.cloud_events", "b", {"title": "Trigger cloud events when connected / disconnected"}],
  ["mqtt.max_queue_length", "i", {"title": "Maximum queue length for buffering QoS 1+ messages. 0 to disable queue."}],
  ["mqtt.ws_enable", "b", {"title": "Enable WebSocket encapsulation"}],
  ["mqtt.ws_path", "s", {"title": "Path to use for WebSocket handshake"}],
  ["mqtt.pub", "s", {"title": "Publish topic"}],
  ["mqtt.sub", "s", {"title": "Subscription topic"}],
  ["mqtt.device_health", "s", {"title": "health topic"}],
  ["mqtt.status", "s", {"title": "Mqtt port"}],
  ["mqtt1", "o", {"title": "Backup MQTT settings"}],
  ["mqtt1.enable", "b", {"title": "Enable MQTT"}],
  ["mqtt1.server", "s", {"title": "MQTT server"}],
  ["mqtt1.client_id", "s", {"title": "ClientID send to the broker. Defaults to device.id."}],
  ["mqtt1.user", "s", {"title": "User name"}],
  ["mqtt1.pass", "s", {"title": "Password"}],
  ["mqtt1.reconnect_timeout_min", "d", {"title": "Starting reconnect timeout in sec"}],
  ["mqtt1.reconnect_timeout_max", "d", {"title": "Maximum reconnect timeout in sec"}],
  ["mqtt1.ssl_cert", "s", {"title": "Client certificate to present to the server"}],
  ["mqtt1.ssl_key", "s", {"title": "Private key corresponding to the certificate"}],
  ["mqtt1.ssl_ca_cert", "s", {"title": "Verify server certificate using this CA bundle"}],
  ["mqtt1.ssl_cipher_suites", "s", {"title": "Cipher suites to offer to the server"}],
  ["mqtt1.ssl_psk_identity", "s", {"title": "PSK identity (must specify PSK cipher suites)"}],
  ["mqtt1.ssl_psk_key", "s", {"title": "PSK key"}],
  ["mqtt1.clean_session", "b", {"title": "Clean Session"}],
  ["mqtt1.keep_alive", "i", {"title": "Keep alive interval"}],
  ["mqtt1.will_topic", "s", {"title": "will topic"}],
  ["mqtt1.will_message", "s", {"title": "Will message"}],
  ["mqtt1.will_retain", "b", {"title": "Will retain flag"}],
  ["mqtt1.max_qos", "i", {"title": "Limit QoS of outgoing messages to at most this"}],
  ["mqtt1.recv_mbuf_limit", "i", {"title": "Limit recv buffer size"}],
  ["mqtt1.require_time", "b", {"title": "Only connect if (when) wall time is set"}],
  ["mqtt1.cloud_events", "b", {"title": "Trigger cloud events when connected / disconnected"}],
  ["mqtt1.max_queue_length", "i", {"title": "Maximum queue length for buffering QoS 1+ messages. 0 to disable queue."}],
  ["mqtt1.ws_enable", "b", {"title": "Enable WebSocket encapsulation"}],
  ["mqtt1.ws_path", "s", {"title": "Path to use for WebSocket handshake"}],
  ["mqtt1.pub", "s", {"title": "Publish topic"}],
  ["mqtt1.sub", "s", {"title": "Subscription topic"}],
  ["mqtt1.device_health", "s", {"title": "health topic"}],
  ["mqtt1.status", "s", {"title": "Mqtt port"}],
  ["update", "o", {"title": "Firmware updater"}],
  ["update.timeout", "i", {"title": "Update will be aborted if it does not finish within this time"}],
  ["update.commit_timeout", "i", {"title": "After applying update, wait for commit up to this long"}],
  ["update.key0", "s", {"title": "Update signature verification key 0. ECDSA P-256, DER + Base64."}],
  ["update.key1", "s", {"title": "Update signature verification key 1. ECDSA P-256, DER + Base64."}],
  ["update.key2", "s", {"title": "Update signature verification key 2. ECDSA P-256, DER + Base64."}],
  ["update.key3", "s", {"title": "Update signature verification key 3. ECDSA P-256, DER + Base64."}],
  ["update.key4", "s", {"title": "Update signature verification key 4. ECDSA P-256, DER + Base64."}],
  ["update.key5", "s", {"title": "Update signature verification key 5. ECDSA P-256, DER + Base64."}],
  ["update.key6", "s", {"title": "Update signature verification key 6. ECDSA P-256, DER + Base64."}],
  ["update.key7", "s", {"title": "Update signature verification key 7. ECDSA P-256, DER + Base64."}],
  ["update.sig_req_mask", "i", {"title": "Update signature requirements. If >= 0, it is used as a bitmask where bit 0 corresponds to key 0, bit 1 to key 1, etc. All of the masked bits must be set, i.e. if sig_req is 3, update must be signed by both key 0 and key 1."}],
  ["update.url", "s", {"title": "Fetch updates from here"}],
  ["update.interval", "i", {"title": "Check for updates this often"}],
  ["update.extra_http_headers", "s", {"title": "Extra HTTP request headers"}],
  ["update.ssl_ca_file", "s", {"title": "TLS CA file"}],
  ["update.ssl_client_cert_file", "s", {"title": "TLS client cert file"}],
  ["update.ssl_server_name", "s", {"title": "TLS Server Name"}],
  ["update.enable_post", "b", {"title": "Enable POST updates"}],
  ["rpc", "o", {"title": "RPC settings"}],
  ["rpc.enable", "b", {"title": "Enable RPC"}],
  ["rpc.http_enable", "b", {"title": "Enable RPC over HTTP"}],
  ["rpc.service_sys_enable", "b", {"title": "Enable Sys RPC service"}],
  ["rpc.max_frame_size", "i", {"title": "Max Frame Size"}],
  ["rpc.max_queue_length", "i", {"title": "Max Queue Length"}],
  ["rpc.max_non_persistent_channels", "i", {"title": "Maximum number of simultaneous non-persistent channels"}],
  ["rpc.default_out_channel_idle_close_timeout", "i", {"title": "Default idle close timeout for outbound channels"}],
  ["rpc.acl", "s", {"title": "RPC ACL spec - JSON or @file"}],
  ["rpc.acl_file", "s", {"title": "File with RPC ACL JSON; deprecated, used if rpc.acl is not set"}],
  ["rpc.auth_domain", "s", {"title": "Realm to use for digest authentication"}],
  ["rpc.auth_file", "s", {"title": "File with user credentials in the htdigest format"}],
  ["rpc.auth_algo", "i", {"title": "Password file hashing algorithm: 0 - MD5, 1 - SHA256"}],
  ["rpc.uart", "o", {"title": "RPC-over-UART settings"}],
  ["rpc.uart.uart_no", "i", {"title": "UART number (-1 to disable)"}],
  ["rpc.uart.baud_rate", "i", {"title": "Baud rate"}],
  ["rpc.uart.fc_type", "i", {"title": "Flow control: 0 - none, 1 - CTS/RTS, 2 - XON/XOFF"}],
  ["rpc.uart.dst", "s", {"title": "Destination reachable via this channel"}],
  ["sntp", "o", {"title": "SNTP settings"}],
  ["sntp.enable", "b", {"title": "Enable SNTP"}],
  ["sntp.server", "s", {"title": "Server address. If DHCP lease contains NTP server, tries that first."}],
  ["sntp.retry_min", "i", {"title": "Minimum retry interval"}],
  ["sntp.retry_max", "i", {"title": "Maximum retry interval"}],
  ["sntp.update_interval", "i", {"title": "Update interval. If 0, performs a one-off sync"}],
  ["wifi", "o", {"hide": true}],
  ["wifi.ap", "o", {"title": "WiFi Access Point Config"}],
  ["wifi.ap.enable", "b", {"title": "Enable"}],
  ["wifi.ap.ssid", "s", {"title": "SSID"}],
  ["wifi.ap.pass", "s", {"title": "Password", "type": "password"}],
  ["wifi.ap.hidden", "b", {"title": "Hide SSID"}],
  ["wifi.ap.channel", "i", {"title": "Channel"}],
  ["wifi.ap.max_connections", "i", {"title": "Max connections"}],
  ["wifi.ap.ip", "s", {"title": "IP address"}],
  ["wifi.ap.netmask", "s", {"title": "Network Mask"}],
  ["wifi.ap.gw", "s", {"title": "Default Gateway"}],
  ["wifi.ap.dhcp_start", "s", {"title": "DHCP Start Address"}],
  ["wifi.ap.dhcp_end", "s", {"title": "DHCP End Address"}],
  ["wifi.ap.trigger_on_gpio", "i", {"title": "Trigger AP on low GPIO"}],
  ["wifi.ap.disable_after", "i", {"title": "If > 0, will disable itself after the specified number of seconds"}],
  ["wifi.ap.hostname", "s", {"title": "If not empty, DNS server will resolve given host name to the IP address of AP"}],
  ["wifi.ap.bandwidth_20mhz", "b", {"title": "enable 20MHz bandwidth AP operation"}],
  ["wifi.ap.protocol", "s", {"title": "802.11 Wi-Fi Protocol for AP Mode, defaults to BGN, can be any combination of BGNLR. Note LR only works between 2 ESP32 devices."}],
  ["wifi.sta", "o", {"title": "WiFi Station Config"}],
  ["wifi.sta.enable", "b", {"title": "Connect to existing WiFi"}],
  ["wifi.sta.ssid", "s", {"title": "SSID"}],
  ["wifi.sta.pass", "s", {"title": "Password", "type": "password"}],
  ["wifi.sta.bssid", "s", {"title": "Specific AP to connect to"}],
  ["wifi.sta.channel", "i", {"title": "Specific channel to use when connecting"}],
  ["wifi.sta.last_bssid", "s", {"title": "Used to store AP's BSSID for quick connect"}],
  ["wifi.sta.last_channel", "i", {"title": "Used to store AP's channel for quick connect"}],
  ["wifi.sta.user", "s", {"title": "Username for WPA-PEAP mode"}],
  ["wifi.sta.anon_identity", "s", {"title": "Anonymous identity for WPA mode"}],
  ["wifi.sta.cert", "s", {"title": "Client certificate for WPA-TTLS mode"}],
  ["wifi.sta.key", "s", {"title": "Client key for WPA-TTLS mode"}],
  ["wifi.sta.ca_cert", "s", {"title": "CA certificate for WPA-enterprise mode"}],
  ["wifi.sta.ip", "s", {"title": "Static IP Address"}],
  ["wifi.sta.netmask", "s", {"title": "Static Netmask"}],
  ["wifi.sta.gw", "s", {"title": "Static Default Gateway"}],
  ["wifi.sta.nameserver", "s", {"title": "DNS Server"}],
  ["wifi.sta.dhcp_hostname", "s", {"title": "Host name to include in DHCP requests"}],
  ["wifi.sta.protocol", "s", {"title": "802.11 Wi-Fi Protocol for STA Mode, defaults to BGN, can be any combination of BGNLR. Note LR only works between 2 ESP32 devices."}],
  ["wifi.sta.listen_interval_ms", "i", {"title": "DTIM Listen Interval (ms)"}],
  ["wifi.sta1", "o", {"title": "WiFi Station Config 1"}],
  ["wifi.sta1.enable", "b", {"title": "Connect to existing WiFi"}],
  ["wifi.sta1.ssid", "s", {"title": "SSID"}],
  ["wifi.sta1.pass", "s", {"title": "Password", "type": "password"}],
  ["wifi.sta1.bssid", "s", {"title": "Specific AP to connect to"}],
  ["wifi.sta1.channel", "i", {"title": "Specific channel to use when connecting"}],
  ["wifi.sta1.last_bssid", "s", {"title": "Used to store AP's BSSID for quick connect"}],
  ["wifi.sta1.last_channel", "i", {"title": "Used to store AP's channel for quick connect"}],
  ["wifi.sta1.user", "s", {"title": "Username for WPA-PEAP mode"}],
  ["wifi.sta1.anon_identity", "s", {"title": "Anonymous identity for WPA mode"}],
  ["wifi.sta1.cert", "s", {"title": "Client certificate for WPA-TTLS mode"}],
  ["wifi.sta1.key", "s", {"title": "Client key for WPA-TTLS mode"}],
  ["wifi.sta1.ca_cert", "s", {"title": "CA certificate for WPA-enterprise mode"}],
  ["wifi.sta1.ip", "s", {"title": "Static IP Address"}],
  ["wifi.sta1.netmask", "s", {"title": "Static Netmask"}],
  ["wifi.sta1.gw", "s", {"title": "Static Default Gateway"}],
  ["wifi.sta1.nameserver", "s", {"title": "DNS Server"}],
  ["wifi.sta1.dhcp_hostname", "s", {"title": "Host name to include in DHCP requests"}],
  ["wifi.sta1.protocol", "s", {"title": "802.11 Wi-Fi Protocol for STA Mode, defaults to BGN, can be any combination of BGNLR. Note LR only works between 2 ESP32 devices."}],
  ["wifi.sta1.listen_interval_ms", "i", {"title": "DTIM Listen Interval (ms)"}],
  ["wifi.sta2", "o", {"title": "WiFi Station Config 2"}],
  ["wifi.sta2.enable", "b", {"title": "Connect to existing WiFi"}],
  ["wifi.sta2.ssid", "s", {"title": "SSID"}],
  ["wifi.sta2.pass", "s", {"title": "Password", "type": "password"}],
  ["wifi.sta2.bssid", "s", {"title": "Specific AP to connect to"}],
  ["wifi.sta2.channel", "i", {"title": "Specific channel to use when connecting"}],
  ["wifi.sta2.last_bssid", "s", {"title": "Used to store AP's BSSID for quick connect"}],
  ["wifi.sta2.last_channel", "i", {"title": "Used to store AP's channel for quick connect"}],
  ["wifi.sta2.user", "s", {"title": "Username for WPA-PEAP mode"}],
  ["wifi.sta2.anon_identity", "s", {"title": "Anonymous identity for WPA mode"}],
  ["wifi.sta2.cert", "s", {"title": "Client certificate for WPA-TTLS mode"}],
  ["wifi.sta2.key", "s", {"title": "Client key for WPA-TTLS mode"}],
  ["wifi.sta2.ca_cert", "s", {"title": "CA certificate for WPA-enterprise mode"}],
  ["wifi.sta2.ip", "s", {"title": "Static IP Address"}],
  ["wifi.sta2.netmask", "s", {"title": "Static Netmask"}],
  ["wifi.sta2.gw", "s", {"title": "Static Default Gateway"}],
  ["wifi.sta2.nameserver", "s", {"title": "DNS Server"}],
  ["wifi.sta2.dhcp_hostname", "s", {"title": "Host name to include in DHCP requests"}],
  ["wifi.sta2.protocol", "s", {"title": "802.11 Wi-Fi Protocol for STA Mode, defaults to BGN, can be any combination of BGNLR. Note LR only works between 2 ESP32 devices."}],
  ["wifi.sta2.listen_interval_ms", "i", {"title": "DTIM Listen Interval (ms)"}],
  ["wifi.sta_rssi_thr", "i", {"title": "Do not consider APs with weaker signal"}],
  ["wifi.sta_connect_timeout", "i", {"title": "Timeout for connection, seconds"}],
  ["wifi.sta_roam_rssi_thr", "i", {"title": "If connected to AP with weaker signal, try to find a better one."}],
  ["wifi.sta_roam_interval", "i", {"title": "Scan for better APs at this interval. Set to positive number ot enable."}],
  ["wifi.sta_ps_mode", "i", {"title": "Power save mode for station: 0 - none, 1 - min, 2 - max."}],
  ["board", "o", {"title": "Board layout configuration"}],
  ["board.led1", "o", {}],
  ["board.led1.pin", "i", {"title": "LED GPIO pin"}],
  ["board.led1.active_high", "b", {"title": "True if LED is on when output is high (1)"}],
  ["board.led2", "o", {}],
  ["board.led2.pin", "i", {"title": "LED GPIO pin"}],
  ["board.led2.active_high", "b", {"title": "True if LED is on when output is high (1)"}],
  ["board.led3", "o", {}],
  ["board.led3.pin", "i", {"title": "LED GPIO pin"}],
  ["board.led3.active_high", "b", {"title": "True if LED is on when output is high (1)"}],
  ["board.btn1", "o", {}],
  ["board.btn1.pin", "i", {"title": "Button GPIO pin"}],
  ["board.btn1.pull_up", "b", {"title": "True if button is pulled up when inactive"}],
  ["board.btn2", "o", {}],
  ["board.btn2.pin", "i", {"title": "Button GPIO pin"}],
  ["board.btn2.pull_up", "b", {"title": "True if button is pulled up when inactive"}],
  ["board.btn3", "o", {}],
  ["board.btn3.pin", "i", {"title": "Button GPIO pin"}],
  ["board.btn3.pull_up", "b", {"title": "True if button is pulled up when inactive"}],
  ["admin", "o", {"title": "Admin parameters"}],
  ["admin.variant", "s", {"title": "admin variant"}],
  ["admin.version", "s", {"title": "Firmware Version"}],
  ["iaq", "o", {"title": "IAQ config Parameters"}],
  ["iaq.measurementinterval", "i", {"title": "IAQ Data interval (sec)"}],
  ["iaq.publishinterval", "i", {"title": "IAQ Data publishinterval (sec)"}],
  ["iaq.periodicinterval", "i", {"title": "IAQ Period reset time (min)"}],
  ["iaq.pir", "b", {"title": "Enable/Disable PIR functionality"}],
  ["iaq.temperature", "i", {"title": "Temparature Offset (deg'c)"}],
  ["iaq.humidiy", "i", {"title": "Relative hmidity offset (%)"}],
  ["iaq.lux", "i", {"title": "Lux offset ()"}],
  ["iaq.co2", "i", {"title": "co2 offset(ppm)"}],
  ["iaq.pm_1", "i", {"title": "pm1 offset (ug/m3)"}],
  ["iaq.pm_2_5", "i", {"title": "pm2.5 offset (ug/m3)"}],
  ["iaq.pm_4", "i", {"title": "pm4 offset(ug/m3)"}],
  ["iaq.pm_10", "i", {"title": "pm10 offset(ug/m3)"}],
  ["iaq.Tvoc_offset", "i", {"title": "tvoc offset (Index)"}],
  ["iaq.noise_offset", "i", {"title": "noise offset (Sound level(dB))"}],
  ["iaq.co2FCReference", "i", {"title": "co2 force calibration refernce (ppm)"}],
  ["iaq.FanFCReference", "i", {"title": "Fan FC calibration"}],
  ["iaq.formaldehyde_offset", "i", {"title": "formaldehyde(ppb)"}],
  ["iaq.air_pressure_offset", "i", {"title": "pressure offset(mbar)"}],
  ["iaq.output_type", "i", {"title": "output type 0:avaraged 1:instantaneous"}]
]
